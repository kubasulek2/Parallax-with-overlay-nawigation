a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:after,
blockquote:before,
q:after,
q:before {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

@font-face {
  font-family: Lato;
  src: url(../fonts/Lato-Bold.eot);
  src: url(../fonts/Lato-Bold.eot) format("embedded-opentype"),url(../fonts/Lato-Bold.woff2) format("woff2"),url(../fonts/Lato-Bold.woff) format("woff"),url(../fonts/Lato-Bold.ttf) format("truetype"),url(../fonts/Lato-Bold.svg) format("svg");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: Lato;
  src: url(../fonts/Lato-Regular.eot);
  src: url(../fonts/Lato-Regular.eot) format("embedded-opentype"),url(../fonts/Lato-Regular.woff2) format("woff2"),url(../fonts/Lato-Regular.woff) format("woff"),url(../fonts/Lato-Regular.ttf) format("truetype"),url(../fonts/Lato-Regular.svg) format("svg");
  font-weight: 400;
  font-style: normal;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

html {
  height: 100%;
}

html body {
  height: 100%;
  font-family: Lato;
  font-size: 60%;
  position: relative;
}

@media only screen and (min-width:1024px) {
  html body {
    font-size: 70%;
  }
}

@media only screen and (min-width:1200px) {
  html body {
    font-size: 80%;
  }
}

@media only screen and (min-width:1400px) {
  html body {
    font-size: 90%;
  }
}

@media only screen and (min-width:1600px) {
  html body {
    font-size: 100%;
  }
}

.menu {
  width: 100%;
  height: 100vh;
  overflow: hidden;
  background: #373634;
  position: absolute;
  z-index: 55;
}

.parallax #hamburger .fa-bars {
  font-size: 4em;
  color: #2a2f2f;
  position: fixed;
  top: 1rem;
  right: 2rem;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  cursor: pointer;
}

.parallax #hamburger .fa-bars:hover {
  font-size: 4.5em;
  top: .75rem;
  right: 1.75rem;
  color: #424a4a;
  text-shadow: .1rem .2rem .4rem #aaa;
}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
