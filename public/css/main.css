a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:after,
blockquote:before,
q:after,
q:before {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

@font-face {
  font-family: Lato;
  src: url(../fonts/Lato-Bold.eot);
  src: url(../fonts/Lato-Bold.eot) format("embedded-opentype"),url(../fonts/Lato-Bold.woff2) format("woff2"),url(../fonts/Lato-Bold.woff) format("woff"),url(../fonts/Lato-Bold.ttf) format("truetype"),url(../fonts/Lato-Bold.svg) format("svg");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: Lato;
  src: url(../fonts/Lato-Regular.eot);
  src: url(../fonts/Lato-Regular.eot) format("embedded-opentype"),url(../fonts/Lato-Regular.woff2) format("woff2"),url(../fonts/Lato-Regular.woff) format("woff"),url(../fonts/Lato-Regular.ttf) format("truetype"),url(../fonts/Lato-Regular.svg) format("svg");
  font-weight: 400;
  font-style: normal;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

html {
  height: 100%;
  font-size: 60%;
}

@media only screen and (min-width:1024px) {
  html {
    font-size: 70%;
  }
}

@media only screen and (min-width:1200px) {
  html {
    font-size: 80%;
  }
}

@media only screen and (min-width:1400px) {
  html {
    font-size: 90%;
  }
}

@media only screen and (min-width:1600px) {
  html {
    font-size: 100%;
  }
}

html body {
  height: 100%;
  font-family: Lato;
  font-size: 167%;
  text-align: center;
  color: #262527;
}

@media only screen and (min-width:1024px) {
  html body {
    font-size: 143%;
  }
}

@media only screen and (min-width:1200px) {
  html body {
    font-size: 125%;
  }
}

@media only screen and (min-width:1400px) {
  html body {
    font-size: 111%;
  }
}

@media only screen and (min-width:1600px) {
  html body {
    font-size: 100%;
  }
}

html body h2 {
  padding-top: 3em;
  font-size: 5rem;
  font-weight: 700;
  color: #262527;
}

html body p {
  text-align: center;
  letter-spacing: .09em;
  word-spacing: .2em;
  line-height: 2em;
  font-size: 1.4em;
  color: #4c4a4e;
}

@media only screen and (min-width:1024px) {
  html body p {
    font-size: 1.2em;
  }
}

.menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  overflow: hidden;
  background: #373634;
  position: fixed;
  z-index: 55;
}

.parallax #fixed {
  width: 100%;
  height: 6rem;
  position: fixed;
  background: 0 0;
  z-index: 1;
  -webkit-transition: all 1s ease;
  transition: all 1s ease;
}

.parallax #fixed.scrolled {
  background: #51504d;
}

.parallax #hamburger .fa-bars {
  font-size: 4rem;
  color: #373634;
  position: fixed;
  top: 1rem;
  right: 3rem;
  -webkit-transition: all .3s ease;
  transition: all .3s ease;
  cursor: pointer;
  z-index: 2;
}

.parallax #hamburger .fa-bars:hover {
  font-size: 4.5em;
  top: .75rem;
  right: 2.75rem;
  color: #51504d;
  text-shadow: .2rem .3rem .8rem rgba(0,0,0,.6);
}

.parallax #hamburger.scrolled .fa-bars {
  color: #fefefe;
}

.parallax #hamburger.scrolled .fa-bars:hover {
  color: #d8d8d8;
}

.parallax #header {
  height: 60vh;
  background: url(../images/mountauns.jpeg) no-repeat left bottom fixed;
  background-size: auto;
  position: relative;
}

.parallax #header::after {
  content: '';
  display: block;
  position: absolute;
  opacity: .2;
  height: 100%;
  width: 100%;
  background: #fff;
  -webkit-transition: .3s ease;
  transition: .3s ease;
}

.parallax #header.headerScroll::after {
  opacity: .5;
}

.parallax #header #title {
  display: none;
}

@media only screen and (min-width:850px) {
  .parallax #header #title {
    display: block;
  }
}

.parallax #header #title pre {
  color: #373634;
  font-size: 4rem;
  z-index: 2;
  position: fixed;
  text-align: left;
  top: 30vh;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  -webkit-transition: top .3s ease,left .3s ease,text-align .5s ease,-webkit-transform .3s ease;
  transition: top .3s ease,left .3s ease,text-align .5s ease,-webkit-transform .3s ease;
  transition: top .3s ease,left .3s ease,transform .3s ease,text-align .5s ease;
  transition: top .3s ease,left .3s ease,transform .3s ease,text-align .5s ease,-webkit-transform .3s ease;
}

.parallax #header #title.pinned pre {
  text-align: left;
  position: fixed;
  top: 1rem;
  left: 2rem;
  -webkit-transform: initial;
  transform: initial;
}

.parallax #header #title.scrolled pre {
  color: #d8d8d8;
}

.parallax #content1 {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
}

.parallax #content1 .side-menu-container {
  position: absolute;
  top: 30%;
  left: -.3em;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  width: 2em;
}

@media only screen and (min-width:1024px) {
  .parallax #content1 .side-menu-container {
    top: 50%;
  }
}

.parallax #content1 .side-menu-container .side-menu {
  height: 4em;
  margin-top: 1rem;
  width: 3em;
  background: #918377;
  opacity: .6;
  cursor: pointer;
  border-radius: .3em;
  -webkit-transition: .5s ease;
  transition: .5s ease;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

@media only screen and (min-width:1024px) {
  .parallax #content1 .side-menu-container .side-menu {
    opacity: 1;
  }
}

.parallax #content1 .side-menu-container .side-menu p {
  color: #fefefe;
  opacity: 0;
  -webkit-transition: .5s ease;
  transition: .5s ease;
}

.parallax #content1 .side-menu-container .side-menu:hover {
  width: 400%;
  opacity: 1;
}

.parallax #content1 .side-menu-container .side-menu:hover>p {
  opacity: 1;
}

.parallax #content1 .side-menu-container .side-menu .fa-angle-right {
  color: #fefefe;
  font-size: 2em;
  padding-right: 1em;
}

.parallax #content1 .side-menu-container .side-menu:hover .fa-angle-right {
  display: none;
}

.parallax #content1 article {
  width: 95%;
}

@media only screen and (min-width:1024px) {
  .parallax #content1 article {
    width: 80%;
  }
}

.parallax #content1 article .border-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.parallax #content1 article .border-container h2 {
  padding: 3em .5em .5em .5em;
  position: relative;
  -webkit-transition: .5s;
  transition: .5s;
}

.parallax #content1 article .border-container h2::after {
  content: '';
  display: inline-block;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 2px;
  background: #ed6155;
  -webkit-transition: width .3s;
  transition: width .3s;
}

.parallax #content1 article .border-container h2.scrolled {
  letter-spacing: 1rem;
}

.parallax #content1 article .border-container h2.scrolled::after {
  width: 100%;
}

.parallax #content1 article p {
  padding-top: 5rem;
}

.parallax #content2 {
  height: 100vh;
}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
